from collections import defaultdict

def countTuples(A, B, C, D):
    # Step 1: Create a hashmap to store the sums of A[i] + B[j]
    sum_ab = defaultdict(int)
    
    # Calculate all pair sums of A[i] + B[j] and store the frequency in sum_ab
    for a in A:
        for b in B:
            sum_ab[a + b] += 1
    
    # Step 2: Count valid tuples by checking if -(C[k] + D[l]) exists in sum_ab
    count = 0
    for c in C:
        for d in D:
            # Check if the negative of the current sum exists in the sum_ab hashmap
            count += sum_ab.get(-(c + d), 0)
    
    return count

# Test Cases:
# Test Case 1
A1 = [1, 2]
B1 = [-2, -1]
C1 = [-1, 2]
D1 = [0, 2]
print(countTuples(A1, B1, C1, D1))  # Output: 2

# Test Case 2
A2 = [0]
B2 = [0]
C2 = [0]
D2 = [0]
print(countTuples(A2, B2, C2, D2))  # Output: 1
