def binary_search(arr, key):
    # Ensure the array is sorted
    arr.sort()  # Sort the array in ascending order
    
    low = 0
    high = len(arr) - 1
    
    while low <= high:
        mid = (low + high) // 2  # Find the middle index
        if arr[mid] == key:
            return f"Element {key} is found at position {mid}"
        elif arr[mid] < key:
            low = mid + 1  # Narrow search to the right half
        else:
            high = mid - 1  # Narrow search to the left half
    
    return f"Element {key} is not found"


# Test Cases

# Test Case 1: Key exists in the array
arr1 = [3, 4, 6, -9, 10, 8, 9, 30]
key1 = 10
print(binary_search(arr1, key1))  # Expected Output: "Element 10 is found at position 5"

# Test Case 2: Key does not exist in the array
arr2 = [3, 4, 6, -9, 10, 8, 9, 30]
key2 = 100
print(binary_search(arr2, key2))  # Expected Output: "Element 100 is not found"
