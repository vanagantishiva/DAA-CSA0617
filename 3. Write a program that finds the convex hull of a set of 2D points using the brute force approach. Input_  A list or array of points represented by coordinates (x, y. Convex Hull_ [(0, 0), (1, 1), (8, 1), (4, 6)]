def orientation(p, q, r):
    """Returns the orientation of the triplet (p, q, r).
    0 -> p, q, r are collinear
    1 -> Clockwise
    2 -> Counterclockwise
    """
    val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1])
    if val == 0:
        return 0  # Collinear
    elif val > 0:
        return 1  # Clockwise
    else:
        return 2  # Counterclockwise

def convex_hull(points):
    """Finds the convex hull of a set of points using brute force approach."""
    n = len(points)
    if n < 3:
        return points  # Convex hull not possible with less than 3 points

    # Step 1: Sort the points
    points = sorted(points)

    # Step 2: Initialize the result as an empty list to store the convex hull points
    hull = []

    # Step 3: Iterate over the sorted points and find the convex hull
    for i in range(n):
        while len(hull) >= 2 and orientation(hull[-2], hull[-1], points[i]) != 2:
            hull.pop()  # Remove the last point if it does not form a counter-clockwise turn
        hull.append(points[i])  # Add the current point to the convex hull

    return hull

# Test case
points = [(1, 1), (4, 6), (8, 1), (0, 0), (3, 3)]
hull = convex_hull(points)
print("Convex Hull:", hull)
