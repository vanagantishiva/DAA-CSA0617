def assembly_line_scheduling(time_line1, time_line2, transfer_time):
    n = len(time_line1)  # Number of stations
    
    # Initialize DP arrays
    dp1 = [0] * n
    dp2 = [0] * n
    
    # Base cases for the first station
    dp1[0] = time_line1[0]
    dp2[0] = time_line2[0]
    
    # Fill the DP tables
    for i in range(1, n):
        dp1[i] = min(dp1[i-1] + time_line1[i], dp2[i-1] + transfer_time[i-1] + time_line1[i])
        dp2[i] = min(dp2[i-1] + time_line2[i], dp1[i-1] + transfer_time[i-1] + time_line2[i])
    
    # The minimum time to process the product is the minimum of the two possibilities at the last station
    return min(dp1[n-1], dp2[n-1])

# Test Case 1:
time_line1 = [4, 5, 3, 2]  # Time taken at each station on line 1
time_line2 = [2, 10, 1, 4]  # Time taken at each station on line 2
transfer_time = [7, 4, 5]  # Transfer times between lines

result = assembly_line_scheduling(time_line1, time_line2, transfer_time)
print(f"Minimum time to process the product: {result}")

# Test Case 2:
time_line1 = [2, 7, 6, 8]
time_line2 = [5, 6, 3, 4]
transfer_time = [3, 2, 4]

result2 = assembly_line_scheduling(time_line1, time_line2, transfer_time)
print(f"Minimum time to process the product: {result2}")
